import java.io.IOException;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
// Import your vendor's XMLReader implementation here
import org.apache.xerces.parsers.SAXParser;

//from: http://java.sun.com/developer/Books/xmljava/ch03.pdf
class VipContentHandler implements org.xml.sax.ContentHandler {

/** Hold onto the locator for location information */
private Locator locator;
private SemVal sv;

private String topLevelType;
private Long topLevelId;

private static String topTypes="|street_segment|precinct|precinct_split|";
private static String allTypes=topTypes + "precinct_id|precinct_split_id|";

public VipContentHandler(SemVal sv) {
    super();
    this.sv=sv;
}

//localName is the important one
public void startElement(String namespaceURI, String localName, String rawName, Attributes atts) throws SAXException {
    //System.out.println(localName);
    //to do: check if max errors;
    String localNameChk="|" + localName + "|";
    if (localNameChk.matches(SemVal.allTypes)) {
        boolean topLevel=false;
        if (localNameChk.matches(SemVal.topTypes)) {
            topLevel=true;            
            topLevelType=localName;
            
            String attrName=atts.getLocalName(0);    
            if (attrName=="id") {
                Long idLong=new Long(atts.getValue(0))
                topLevelId=idLong;
                sv.addIdType(idLong,localName);
                
                System.out.println(locator.getLineNumber());
            } else {
                sv.addError("First attribute for " + localName + " at line " + locator.getLineNumber());
            }
        } else { //connector
            lowLevelType=localName;
        }
    }
}

public void characters(char[] ch, int start, int end) throws SAXException {
    if (lowLevelType!==null) {
        String s = new String(ch, start, end);
        try {
        Long toId = Long.parseLong(s);
        } catch (Exception e) {
            
        }
        
    }
}

public void endElement(String namespaceURI, String localName, String rawName) throws SAXException {
    String localNameChk="|" + localName + "|";
    if (localNameChk.matches(SemVal.allTypes)) {
        if (localNameChk.matches(SemVal.topTypes)) {
            topLevelType=null;
            topLevelId=null;
        } else {
            lowLevelType=null;
        }
    }
}

public void startDocument() throws SAXException {
}
public void endDocument() throws SAXException {
}
public void processingInstruction(String target, String data) throws SAXException {
}
public void startPrefixMapping(String prefix, String uri) {
}
public void endPrefixMapping(String prefix) {
}

public void ignorableWhitespace(char[] ch, int start, int end) throws SAXException {
}
public void skippedEntity(String name) throws SAXException {
}

public void setDocumentLocator(Locator locator) {
    // We save this for later use if desired.
    this.locator = locator;
}

}
